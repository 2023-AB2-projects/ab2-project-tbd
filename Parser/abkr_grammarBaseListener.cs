//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from abkr_grammar.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="Iabkr_grammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>

namespace abkr.grammarParser
{
    [System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
    [System.CLSCompliant(false)]

    public partial class abkr_grammarBaseListener : Iabkr_grammarListener
	{
		/// <summary>
		/// Enter a parse tree produced by <see cref="abkr_grammarParser.statement"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void EnterStatement([NotNull] abkr_grammarParser.StatementContext context) { }
		/// <summary>
		/// Exit a parse tree produced by <see cref="abkr_grammarParser.statement"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void ExitStatement([NotNull] abkr_grammarParser.StatementContext context) { }
		/// <summary>
		/// Enter a parse tree produced by <see cref="abkr_grammarParser.create_database_statement"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void EnterCreate_database_statement([NotNull] abkr_grammarParser.Create_database_statementContext context) { }
		/// <summary>
		/// Exit a parse tree produced by <see cref="abkr_grammarParser.create_database_statement"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void ExitCreate_database_statement([NotNull] abkr_grammarParser.Create_database_statementContext context) { }
		/// <summary>
		/// Enter a parse tree produced by <see cref="abkr_grammarParser.create_table_statement"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void EnterCreate_table_statement([NotNull] abkr_grammarParser.Create_table_statementContext context) { }
		/// <summary>
		/// Exit a parse tree produced by <see cref="abkr_grammarParser.create_table_statement"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void ExitCreate_table_statement([NotNull] abkr_grammarParser.Create_table_statementContext context) { }
		/// <summary>
		/// Enter a parse tree produced by <see cref="abkr_grammarParser.column_definition_list"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void EnterColumn_definition_list([NotNull] abkr_grammarParser.Column_definition_listContext context) { }
		/// <summary>
		/// Exit a parse tree produced by <see cref="abkr_grammarParser.column_definition_list"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void ExitColumn_definition_list([NotNull] abkr_grammarParser.Column_definition_listContext context) { }
		/// <summary>
		/// Enter a parse tree produced by <see cref="abkr_grammarParser.column_definition"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void EnterColumn_definition([NotNull] abkr_grammarParser.Column_definitionContext context) { }
		/// <summary>
		/// Exit a parse tree produced by <see cref="abkr_grammarParser.column_definition"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void ExitColumn_definition([NotNull] abkr_grammarParser.Column_definitionContext context) { }
		/// <summary>
		/// Enter a parse tree produced by <see cref="abkr_grammarParser.data_type"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void EnterData_type([NotNull] abkr_grammarParser.Data_typeContext context) { }
		/// <summary>
		/// Exit a parse tree produced by <see cref="abkr_grammarParser.data_type"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void ExitData_type([NotNull] abkr_grammarParser.Data_typeContext context) { }
		/// <summary>
		/// Enter a parse tree produced by <see cref="abkr_grammarParser.identifier"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void EnterIdentifier([NotNull] abkr_grammarParser.IdentifierContext context) { }
		/// <summary>
		/// Exit a parse tree produced by <see cref="abkr_grammarParser.identifier"/>.
		/// <para>The default implementation does nothing.</para>
		/// </summary>
		/// <param name="context">The parse tree.</param>
		public virtual void ExitIdentifier([NotNull] abkr_grammarParser.IdentifierContext context) { }

		/// <inheritdoc/>
		/// <remarks>The default implementation does nothing.</remarks>
		public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
		/// <inheritdoc/>
		/// <remarks>The default implementation does nothing.</remarks>
		public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
		/// <inheritdoc/>
		/// <remarks>The default implementation does nothing.</remarks>
		public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
		/// <inheritdoc/>
		/// <remarks>The default implementation does nothing.</remarks>
		public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
	}
}
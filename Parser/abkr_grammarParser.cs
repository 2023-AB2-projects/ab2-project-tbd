//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from abkr_grammar.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using System.Diagnostics;
using System.Collections.Generic;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public partial class abkr_grammarParser : Parser {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, CREATE=5, DATABASE=6, TABLE=7, INDEX=8, 
		DROP=9, ON=10, INT=11, VARCHAR=12, NUMBER=13, IDENTIFIER=14, WS=15;
	public const int
		RULE_statement = 0, RULE_create_database_statement = 1, RULE_create_table_statement = 2, 
		RULE_drop_database_statement = 3, RULE_drop_table_statement = 4, RULE_create_index_statement = 5, 
		RULE_drop_index_statement = 6, RULE_column_definition_list = 7, RULE_column_definition = 8, 
		RULE_identifier_list = 9, RULE_data_type = 10, RULE_identifier = 11;
	public static readonly string[] ruleNames = {
		"statement", "create_database_statement", "create_table_statement", "drop_database_statement", 
		"drop_table_statement", "create_index_statement", "drop_index_statement", 
		"column_definition_list", "column_definition", "identifier_list", "data_type", 
		"identifier"
	};

	private static readonly string[] _LiteralNames = {
		null, "'.'", "'('", "')'", "','", "'CREATE'", "'DATABASE'", "'TABLE'", 
		"'INDEX'", "'DROP'", "'ON'", "'INT'", "'VARCHAR'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, "CREATE", "DATABASE", "TABLE", "INDEX", 
		"DROP", "ON", "INT", "VARCHAR", "NUMBER", "IDENTIFIER", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "abkr_grammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static abkr_grammarParser() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}

		public abkr_grammarParser(ITokenStream input) : this(input, Console.Out, Console.Error) { }

		public abkr_grammarParser(ITokenStream input, TextWriter output, TextWriter errorOutput)
		: base(input, output, errorOutput)
	{
		Interpreter = new ParserATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	public partial class StatementContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Create_database_statementContext create_database_statement() {
			return GetRuleContext<Create_database_statementContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Create_table_statementContext create_table_statement() {
			return GetRuleContext<Create_table_statementContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Drop_database_statementContext drop_database_statement() {
			return GetRuleContext<Drop_database_statementContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Drop_table_statementContext drop_table_statement() {
			return GetRuleContext<Drop_table_statementContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Create_index_statementContext create_index_statement() {
			return GetRuleContext<Create_index_statementContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Drop_index_statementContext drop_index_statement() {
			return GetRuleContext<Drop_index_statementContext>(0);
		}
		public StatementContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_statement; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.EnterStatement(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.ExitStatement(this);
		}
	}

	[RuleVersion(0)]
	public StatementContext statement() {
		StatementContext _localctx = new StatementContext(Context, State);
		EnterRule(_localctx, 0, RULE_statement);
		try {
			State = 30;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,0,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 24;
				create_database_statement();
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 25;
				create_table_statement();
				}
				break;
			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				State = 26;
				drop_database_statement();
				}
				break;
			case 4:
				EnterOuterAlt(_localctx, 4);
				{
				State = 27;
				drop_table_statement();
				}
				break;
			case 5:
				EnterOuterAlt(_localctx, 5);
				{
				State = 28;
				create_index_statement();
				}
				break;
			case 6:
				EnterOuterAlt(_localctx, 6);
				{
				State = 29;
				drop_index_statement();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Create_database_statementContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CREATE() { return GetToken(abkr_grammarParser.CREATE, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode DATABASE() { return GetToken(abkr_grammarParser.DATABASE, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext identifier() {
			return GetRuleContext<IdentifierContext>(0);
		}
		public Create_database_statementContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_create_database_statement; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.EnterCreate_database_statement(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.ExitCreate_database_statement(this);
		}
	}

	[RuleVersion(0)]
	public Create_database_statementContext create_database_statement() {
		Create_database_statementContext _localctx = new Create_database_statementContext(Context, State);
		EnterRule(_localctx, 2, RULE_create_database_statement);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 32;
			Match(CREATE);
			State = 33;
			Match(DATABASE);
			State = 34;
			identifier();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Create_table_statementContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CREATE() { return GetToken(abkr_grammarParser.CREATE, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode TABLE() { return GetToken(abkr_grammarParser.TABLE, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext[] identifier() {
			return GetRuleContexts<IdentifierContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext identifier(int i) {
			return GetRuleContext<IdentifierContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Column_definition_listContext column_definition_list() {
			return GetRuleContext<Column_definition_listContext>(0);
		}
		public Create_table_statementContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_create_table_statement; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.EnterCreate_table_statement(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.ExitCreate_table_statement(this);
		}
	}

	[RuleVersion(0)]
	public Create_table_statementContext create_table_statement() {
		Create_table_statementContext _localctx = new Create_table_statementContext(Context, State);
		EnterRule(_localctx, 4, RULE_create_table_statement);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 36;
			Match(CREATE);
			State = 37;
			Match(TABLE);
			State = 38;
			identifier();
			State = 39;
			Match(T__0);
			State = 40;
			identifier();
			State = 41;
			Match(T__1);
			State = 42;
			column_definition_list();
			State = 43;
			Match(T__2);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Drop_database_statementContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode DROP() { return GetToken(abkr_grammarParser.DROP, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode DATABASE() { return GetToken(abkr_grammarParser.DATABASE, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext identifier() {
			return GetRuleContext<IdentifierContext>(0);
		}
		public Drop_database_statementContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_drop_database_statement; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.EnterDrop_database_statement(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.ExitDrop_database_statement(this);
		}
	}

	[RuleVersion(0)]
	public Drop_database_statementContext drop_database_statement() {
		Drop_database_statementContext _localctx = new Drop_database_statementContext(Context, State);
		EnterRule(_localctx, 6, RULE_drop_database_statement);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 45;
			Match(DROP);
			State = 46;
			Match(DATABASE);
			State = 47;
			identifier();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Drop_table_statementContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode DROP() { return GetToken(abkr_grammarParser.DROP, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode TABLE() { return GetToken(abkr_grammarParser.TABLE, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext[] identifier() {
			return GetRuleContexts<IdentifierContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext identifier(int i) {
			return GetRuleContext<IdentifierContext>(i);
		}
		public Drop_table_statementContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_drop_table_statement; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.EnterDrop_table_statement(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.ExitDrop_table_statement(this);
		}
	}

	[RuleVersion(0)]
	public Drop_table_statementContext drop_table_statement() {
		Drop_table_statementContext _localctx = new Drop_table_statementContext(Context, State);
		EnterRule(_localctx, 8, RULE_drop_table_statement);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 49;
			Match(DROP);
			State = 50;
			Match(TABLE);
			State = 51;
			identifier();
			State = 52;
			Match(T__0);
			State = 53;
			identifier();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Create_index_statementContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CREATE() { return GetToken(abkr_grammarParser.CREATE, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode INDEX() { return GetToken(abkr_grammarParser.INDEX, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext[] identifier() {
			return GetRuleContexts<IdentifierContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext identifier(int i) {
			return GetRuleContext<IdentifierContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode ON() { return GetToken(abkr_grammarParser.ON, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public Identifier_listContext identifier_list() {
			return GetRuleContext<Identifier_listContext>(0);
		}
		public Create_index_statementContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_create_index_statement; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.EnterCreate_index_statement(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.ExitCreate_index_statement(this);
		}
	}

	[RuleVersion(0)]
	public Create_index_statementContext create_index_statement() {
		Create_index_statementContext _localctx = new Create_index_statementContext(Context, State);
		EnterRule(_localctx, 10, RULE_create_index_statement);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 55;
			Match(CREATE);
			State = 56;
			Match(INDEX);
			State = 57;
			identifier();
			State = 58;
			Match(ON);
			State = 59;
			identifier();
			State = 60;
			Match(T__1);
			State = 61;
			identifier_list();
			State = 62;
			Match(T__2);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Drop_index_statementContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode DROP() { return GetToken(abkr_grammarParser.DROP, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode INDEX() { return GetToken(abkr_grammarParser.INDEX, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext[] identifier() {
			return GetRuleContexts<IdentifierContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext identifier(int i) {
			return GetRuleContext<IdentifierContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode ON() { return GetToken(abkr_grammarParser.ON, 0); }
		public Drop_index_statementContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_drop_index_statement; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.EnterDrop_index_statement(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.ExitDrop_index_statement(this);
		}
	}

	[RuleVersion(0)]
	public Drop_index_statementContext drop_index_statement() {
		Drop_index_statementContext _localctx = new Drop_index_statementContext(Context, State);
		EnterRule(_localctx, 12, RULE_drop_index_statement);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 64;
			Match(DROP);
			State = 65;
			Match(INDEX);
			State = 66;
			identifier();
			State = 67;
			Match(ON);
			State = 68;
			identifier();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Column_definition_listContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Column_definitionContext[] column_definition() {
			return GetRuleContexts<Column_definitionContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public Column_definitionContext column_definition(int i) {
			return GetRuleContext<Column_definitionContext>(i);
		}
		public Column_definition_listContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_column_definition_list; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.EnterColumn_definition_list(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.ExitColumn_definition_list(this);
		}
	}

	[RuleVersion(0)]
	public Column_definition_listContext column_definition_list() {
		Column_definition_listContext _localctx = new Column_definition_listContext(Context, State);
		EnterRule(_localctx, 14, RULE_column_definition_list);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 70;
			column_definition();
			State = 75;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			while (_la==T__3) {
				{
				{
				State = 71;
				Match(T__3);
				State = 72;
				column_definition();
				}
				}
				State = 77;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Column_definitionContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext identifier() {
			return GetRuleContext<IdentifierContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Data_typeContext data_type() {
			return GetRuleContext<Data_typeContext>(0);
		}
		public Column_definitionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_column_definition; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.EnterColumn_definition(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.ExitColumn_definition(this);
		}
	}

	[RuleVersion(0)]
	public Column_definitionContext column_definition() {
		Column_definitionContext _localctx = new Column_definitionContext(Context, State);
		EnterRule(_localctx, 16, RULE_column_definition);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 78;
			identifier();
			State = 79;
			data_type();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Identifier_listContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext[] identifier() {
			return GetRuleContexts<IdentifierContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public IdentifierContext identifier(int i) {
			return GetRuleContext<IdentifierContext>(i);
		}
		public Identifier_listContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_identifier_list; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.EnterIdentifier_list(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.ExitIdentifier_list(this);
		}
	}

	[RuleVersion(0)]
	public Identifier_listContext identifier_list() {
		Identifier_listContext _localctx = new Identifier_listContext(Context, State);
		EnterRule(_localctx, 18, RULE_identifier_list);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 81;
			identifier();
			State = 86;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			while (_la==T__3) {
				{
				{
				State = 82;
				Match(T__3);
				State = 83;
				identifier();
				}
				}
				State = 88;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Data_typeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode INT() { return GetToken(abkr_grammarParser.INT, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode VARCHAR() { return GetToken(abkr_grammarParser.VARCHAR, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode NUMBER() { return GetToken(abkr_grammarParser.NUMBER, 0); }
		public Data_typeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_data_type; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.EnterData_type(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.ExitData_type(this);
		}
	}

	[RuleVersion(0)]
	public Data_typeContext data_type() {
		Data_typeContext _localctx = new Data_typeContext(Context, State);
		EnterRule(_localctx, 20, RULE_data_type);
		try {
			State = 94;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case INT:
				EnterOuterAlt(_localctx, 1);
				{
				State = 89;
				Match(INT);
				}
				break;
			case VARCHAR:
				EnterOuterAlt(_localctx, 2);
				{
				State = 90;
				Match(VARCHAR);
				State = 91;
				Match(T__1);
				State = 92;
				Match(NUMBER);
				State = 93;
				Match(T__2);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class IdentifierContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IDENTIFIER() { return GetToken(abkr_grammarParser.IDENTIFIER, 0); }
		public IdentifierContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_identifier; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.EnterIdentifier(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			Iabkr_grammarListener typedListener = listener as Iabkr_grammarListener;
			if (typedListener != null) typedListener.ExitIdentifier(this);
		}
	}

	[RuleVersion(0)]
	public IdentifierContext identifier() {
		IdentifierContext _localctx = new IdentifierContext(Context, State);
		EnterRule(_localctx, 22, RULE_identifier);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 96;
			Match(IDENTIFIER);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	private static int[] _serializedATN = {
		4,1,15,99,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,
		7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,0,1,0,1,0,1,0,1,0,3,0,31,
		8,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,
		3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,
		1,6,1,6,1,6,1,6,1,7,1,7,1,7,5,7,74,8,7,10,7,12,7,77,9,7,1,8,1,8,1,8,1,
		9,1,9,1,9,5,9,85,8,9,10,9,12,9,88,9,9,1,10,1,10,1,10,1,10,1,10,3,10,95,
		8,10,1,11,1,11,1,11,0,0,12,0,2,4,6,8,10,12,14,16,18,20,22,0,0,94,0,30,
		1,0,0,0,2,32,1,0,0,0,4,36,1,0,0,0,6,45,1,0,0,0,8,49,1,0,0,0,10,55,1,0,
		0,0,12,64,1,0,0,0,14,70,1,0,0,0,16,78,1,0,0,0,18,81,1,0,0,0,20,94,1,0,
		0,0,22,96,1,0,0,0,24,31,3,2,1,0,25,31,3,4,2,0,26,31,3,6,3,0,27,31,3,8,
		4,0,28,31,3,10,5,0,29,31,3,12,6,0,30,24,1,0,0,0,30,25,1,0,0,0,30,26,1,
		0,0,0,30,27,1,0,0,0,30,28,1,0,0,0,30,29,1,0,0,0,31,1,1,0,0,0,32,33,5,5,
		0,0,33,34,5,6,0,0,34,35,3,22,11,0,35,3,1,0,0,0,36,37,5,5,0,0,37,38,5,7,
		0,0,38,39,3,22,11,0,39,40,5,1,0,0,40,41,3,22,11,0,41,42,5,2,0,0,42,43,
		3,14,7,0,43,44,5,3,0,0,44,5,1,0,0,0,45,46,5,9,0,0,46,47,5,6,0,0,47,48,
		3,22,11,0,48,7,1,0,0,0,49,50,5,9,0,0,50,51,5,7,0,0,51,52,3,22,11,0,52,
		53,5,1,0,0,53,54,3,22,11,0,54,9,1,0,0,0,55,56,5,5,0,0,56,57,5,8,0,0,57,
		58,3,22,11,0,58,59,5,10,0,0,59,60,3,22,11,0,60,61,5,2,0,0,61,62,3,18,9,
		0,62,63,5,3,0,0,63,11,1,0,0,0,64,65,5,9,0,0,65,66,5,8,0,0,66,67,3,22,11,
		0,67,68,5,10,0,0,68,69,3,22,11,0,69,13,1,0,0,0,70,75,3,16,8,0,71,72,5,
		4,0,0,72,74,3,16,8,0,73,71,1,0,0,0,74,77,1,0,0,0,75,73,1,0,0,0,75,76,1,
		0,0,0,76,15,1,0,0,0,77,75,1,0,0,0,78,79,3,22,11,0,79,80,3,20,10,0,80,17,
		1,0,0,0,81,86,3,22,11,0,82,83,5,4,0,0,83,85,3,22,11,0,84,82,1,0,0,0,85,
		88,1,0,0,0,86,84,1,0,0,0,86,87,1,0,0,0,87,19,1,0,0,0,88,86,1,0,0,0,89,
		95,5,11,0,0,90,91,5,12,0,0,91,92,5,2,0,0,92,93,5,13,0,0,93,95,5,3,0,0,
		94,89,1,0,0,0,94,90,1,0,0,0,95,21,1,0,0,0,96,97,5,14,0,0,97,23,1,0,0,0,
		4,30,75,86,94
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}

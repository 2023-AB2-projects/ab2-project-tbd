//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from abkr_grammar.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="Iabkr_grammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class abkr_grammarBaseListener : Iabkr_grammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] abkr_grammarParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] abkr_grammarParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.create_database_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_database_statement([NotNull] abkr_grammarParser.Create_database_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.create_database_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_database_statement([NotNull] abkr_grammarParser.Create_database_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.create_table_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_table_statement([NotNull] abkr_grammarParser.Create_table_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.create_table_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_table_statement([NotNull] abkr_grammarParser.Create_table_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.drop_database_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_database_statement([NotNull] abkr_grammarParser.Drop_database_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.drop_database_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_database_statement([NotNull] abkr_grammarParser.Drop_database_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.drop_table_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_table_statement([NotNull] abkr_grammarParser.Drop_table_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.drop_table_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_table_statement([NotNull] abkr_grammarParser.Drop_table_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.create_index_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_index_statement([NotNull] abkr_grammarParser.Create_index_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.create_index_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_index_statement([NotNull] abkr_grammarParser.Create_index_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.drop_index_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_index_statement([NotNull] abkr_grammarParser.Drop_index_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.drop_index_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_index_statement([NotNull] abkr_grammarParser.Drop_index_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.column_definition_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_definition_list([NotNull] abkr_grammarParser.Column_definition_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.column_definition_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_definition_list([NotNull] abkr_grammarParser.Column_definition_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.column_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_definition([NotNull] abkr_grammarParser.Column_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.column_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_definition([NotNull] abkr_grammarParser.Column_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.column_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_constraint([NotNull] abkr_grammarParser.Column_constraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.column_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_constraint([NotNull] abkr_grammarParser.Column_constraintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.data_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterData_type([NotNull] abkr_grammarParser.Data_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.data_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitData_type([NotNull] abkr_grammarParser.Data_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.identifier_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier_list([NotNull] abkr_grammarParser.Identifier_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.identifier_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier_list([NotNull] abkr_grammarParser.Identifier_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] abkr_grammarParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] abkr_grammarParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.insert_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInsert_statement([NotNull] abkr_grammarParser.Insert_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.insert_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInsert_statement([NotNull] abkr_grammarParser.Insert_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.delete_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDelete_statement([NotNull] abkr_grammarParser.Delete_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.delete_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDelete_statement([NotNull] abkr_grammarParser.Delete_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.value_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue_list([NotNull] abkr_grammarParser.Value_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.value_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue_list([NotNull] abkr_grammarParser.Value_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] abkr_grammarParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] abkr_grammarParser.ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.select_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_statement([NotNull] abkr_grammarParser.Select_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.select_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_statement([NotNull] abkr_grammarParser.Select_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.column_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_list([NotNull] abkr_grammarParser.Column_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.column_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_list([NotNull] abkr_grammarParser.Column_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhere_clause([NotNull] abkr_grammarParser.Where_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhere_clause([NotNull] abkr_grammarParser.Where_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.table_source"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_source([NotNull] abkr_grammarParser.Table_sourceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.table_source"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_source([NotNull] abkr_grammarParser.Table_sourceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.join_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_clause([NotNull] abkr_grammarParser.Join_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.join_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_clause([NotNull] abkr_grammarParser.Join_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] abkr_grammarParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] abkr_grammarParser.ConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleCondition</c>
	/// labeled alternative in <see cref="abkr_grammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleCondition([NotNull] abkr_grammarParser.SimpleConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleCondition</c>
	/// labeled alternative in <see cref="abkr_grammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleCondition([NotNull] abkr_grammarParser.SimpleConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="abkr_grammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpression([NotNull] abkr_grammarParser.AndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="abkr_grammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpression([NotNull] abkr_grammarParser.AndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenExpression</c>
	/// labeled alternative in <see cref="abkr_grammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenExpression([NotNull] abkr_grammarParser.ParenExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenExpression</c>
	/// labeled alternative in <see cref="abkr_grammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenExpression([NotNull] abkr_grammarParser.ParenExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammarParser.comparison_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparison_operator([NotNull] abkr_grammarParser.Comparison_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammarParser.comparison_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparison_operator([NotNull] abkr_grammarParser.Comparison_operatorContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}

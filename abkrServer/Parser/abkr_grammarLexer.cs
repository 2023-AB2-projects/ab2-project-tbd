//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from abkr_grammarLexer.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public partial class abkr_grammarLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		CREATE=1, DATABASE=2, TABLE=3, INDEX=4, UNIQUE=5, DROP=6, ON=7, INT=8, 
		VARCHAR=9, PRIMARY=10, KEY=11, FOREIGN=12, REFERENCES=13, INSERT=14, INTO=15, 
		VALUES=16, DELETE=17, FROM=18, WHERE=19, DOT=20, COMMA=21, LPAREN=22, 
		RPAREN=23, EQUALS=24, IDENTIFIER=25, NUMBER=26, STRING=27, WS=28;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"CREATE", "DATABASE", "TABLE", "INDEX", "UNIQUE", "DROP", "ON", "INT", 
		"VARCHAR", "PRIMARY", "KEY", "FOREIGN", "REFERENCES", "INSERT", "INTO", 
		"VALUES", "DELETE", "FROM", "WHERE", "A", "B", "C", "D", "E", "F", "G", 
		"H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", 
		"V", "W", "X", "Y", "Z", "DOT", "COMMA", "LPAREN", "RPAREN", "EQUALS", 
		"IDENTIFIER", "NUMBER", "STRING", "WS"
	};


	public abkr_grammarLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public abkr_grammarLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, "'.'", "','", "'('", "')'", 
		"'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "CREATE", "DATABASE", "TABLE", "INDEX", "UNIQUE", "DROP", "ON", 
		"INT", "VARCHAR", "PRIMARY", "KEY", "FOREIGN", "REFERENCES", "INSERT", 
		"INTO", "VALUES", "DELETE", "FROM", "WHERE", "DOT", "COMMA", "LPAREN", 
		"RPAREN", "EQUALS", "IDENTIFIER", "NUMBER", "STRING", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "abkr_grammarLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static abkr_grammarLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,28,326,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,1,0,1,0,1,0,1,0,1,0,1,0,1,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,
		1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,
		6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,
		1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
		1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
		1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
		1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,
		1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,
		1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,
		1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,
		1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,
		1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,
		1,50,5,50,297,8,50,10,50,12,50,300,9,50,1,51,4,51,303,8,51,11,51,12,51,
		304,1,52,1,52,1,52,1,52,1,52,1,52,5,52,313,8,52,10,52,12,52,316,9,52,1,
		52,1,52,1,53,4,53,321,8,53,11,53,12,53,322,1,53,1,53,0,0,54,1,1,3,2,5,
		3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
		33,17,35,18,37,19,39,0,41,0,43,0,45,0,47,0,49,0,51,0,53,0,55,0,57,0,59,
		0,61,0,63,0,65,0,67,0,69,0,71,0,73,0,75,0,77,0,79,0,81,0,83,0,85,0,87,
		0,89,0,91,20,93,21,95,22,97,23,99,24,101,25,103,26,105,27,107,28,1,0,31,
		2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,
		69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,
		0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,
		2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,
		2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,116,
		2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,
		2,0,89,89,121,121,2,0,90,90,122,122,2,0,65,90,97,122,4,0,48,57,65,90,95,
		95,97,122,1,0,48,57,1,0,39,39,3,0,9,10,13,13,32,32,305,0,1,1,0,0,0,0,3,
		1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,
		0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
		1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,
		0,0,37,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
		1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,1,109,
		1,0,0,0,3,116,1,0,0,0,5,125,1,0,0,0,7,131,1,0,0,0,9,137,1,0,0,0,11,144,
		1,0,0,0,13,149,1,0,0,0,15,152,1,0,0,0,17,156,1,0,0,0,19,164,1,0,0,0,21,
		172,1,0,0,0,23,176,1,0,0,0,25,184,1,0,0,0,27,195,1,0,0,0,29,202,1,0,0,
		0,31,207,1,0,0,0,33,214,1,0,0,0,35,221,1,0,0,0,37,226,1,0,0,0,39,232,1,
		0,0,0,41,234,1,0,0,0,43,236,1,0,0,0,45,238,1,0,0,0,47,240,1,0,0,0,49,242,
		1,0,0,0,51,244,1,0,0,0,53,246,1,0,0,0,55,248,1,0,0,0,57,250,1,0,0,0,59,
		252,1,0,0,0,61,254,1,0,0,0,63,256,1,0,0,0,65,258,1,0,0,0,67,260,1,0,0,
		0,69,262,1,0,0,0,71,264,1,0,0,0,73,266,1,0,0,0,75,268,1,0,0,0,77,270,1,
		0,0,0,79,272,1,0,0,0,81,274,1,0,0,0,83,276,1,0,0,0,85,278,1,0,0,0,87,280,
		1,0,0,0,89,282,1,0,0,0,91,284,1,0,0,0,93,286,1,0,0,0,95,288,1,0,0,0,97,
		290,1,0,0,0,99,292,1,0,0,0,101,294,1,0,0,0,103,302,1,0,0,0,105,306,1,0,
		0,0,107,320,1,0,0,0,109,110,3,43,21,0,110,111,3,73,36,0,111,112,3,47,23,
		0,112,113,3,39,19,0,113,114,3,77,38,0,114,115,3,47,23,0,115,2,1,0,0,0,
		116,117,3,45,22,0,117,118,3,39,19,0,118,119,3,77,38,0,119,120,3,39,19,
		0,120,121,3,41,20,0,121,122,3,39,19,0,122,123,3,75,37,0,123,124,3,47,23,
		0,124,4,1,0,0,0,125,126,3,77,38,0,126,127,3,39,19,0,127,128,3,41,20,0,
		128,129,3,61,30,0,129,130,3,47,23,0,130,6,1,0,0,0,131,132,3,55,27,0,132,
		133,3,65,32,0,133,134,3,45,22,0,134,135,3,47,23,0,135,136,3,85,42,0,136,
		8,1,0,0,0,137,138,3,79,39,0,138,139,3,65,32,0,139,140,3,55,27,0,140,141,
		3,71,35,0,141,142,3,79,39,0,142,143,3,47,23,0,143,10,1,0,0,0,144,145,3,
		45,22,0,145,146,3,73,36,0,146,147,3,67,33,0,147,148,3,69,34,0,148,12,1,
		0,0,0,149,150,3,67,33,0,150,151,3,65,32,0,151,14,1,0,0,0,152,153,3,55,
		27,0,153,154,3,65,32,0,154,155,3,77,38,0,155,16,1,0,0,0,156,157,3,81,40,
		0,157,158,3,39,19,0,158,159,3,73,36,0,159,160,3,43,21,0,160,161,3,53,26,
		0,161,162,3,39,19,0,162,163,3,73,36,0,163,18,1,0,0,0,164,165,3,69,34,0,
		165,166,3,73,36,0,166,167,3,55,27,0,167,168,3,63,31,0,168,169,3,39,19,
		0,169,170,3,73,36,0,170,171,3,87,43,0,171,20,1,0,0,0,172,173,3,59,29,0,
		173,174,3,47,23,0,174,175,3,87,43,0,175,22,1,0,0,0,176,177,3,49,24,0,177,
		178,3,67,33,0,178,179,3,73,36,0,179,180,3,47,23,0,180,181,3,55,27,0,181,
		182,3,51,25,0,182,183,3,65,32,0,183,24,1,0,0,0,184,185,3,73,36,0,185,186,
		3,47,23,0,186,187,3,49,24,0,187,188,3,47,23,0,188,189,3,73,36,0,189,190,
		3,47,23,0,190,191,3,65,32,0,191,192,3,43,21,0,192,193,3,47,23,0,193,194,
		3,75,37,0,194,26,1,0,0,0,195,196,3,55,27,0,196,197,3,65,32,0,197,198,3,
		75,37,0,198,199,3,47,23,0,199,200,3,73,36,0,200,201,3,77,38,0,201,28,1,
		0,0,0,202,203,3,55,27,0,203,204,3,65,32,0,204,205,3,77,38,0,205,206,3,
		67,33,0,206,30,1,0,0,0,207,208,3,81,40,0,208,209,3,39,19,0,209,210,3,61,
		30,0,210,211,3,79,39,0,211,212,3,47,23,0,212,213,3,75,37,0,213,32,1,0,
		0,0,214,215,3,45,22,0,215,216,3,47,23,0,216,217,3,61,30,0,217,218,3,47,
		23,0,218,219,3,77,38,0,219,220,3,47,23,0,220,34,1,0,0,0,221,222,3,49,24,
		0,222,223,3,73,36,0,223,224,3,67,33,0,224,225,3,63,31,0,225,36,1,0,0,0,
		226,227,3,83,41,0,227,228,3,53,26,0,228,229,3,47,23,0,229,230,3,73,36,
		0,230,231,3,47,23,0,231,38,1,0,0,0,232,233,7,0,0,0,233,40,1,0,0,0,234,
		235,7,1,0,0,235,42,1,0,0,0,236,237,7,2,0,0,237,44,1,0,0,0,238,239,7,3,
		0,0,239,46,1,0,0,0,240,241,7,4,0,0,241,48,1,0,0,0,242,243,7,5,0,0,243,
		50,1,0,0,0,244,245,7,6,0,0,245,52,1,0,0,0,246,247,7,7,0,0,247,54,1,0,0,
		0,248,249,7,8,0,0,249,56,1,0,0,0,250,251,7,9,0,0,251,58,1,0,0,0,252,253,
		7,10,0,0,253,60,1,0,0,0,254,255,7,11,0,0,255,62,1,0,0,0,256,257,7,12,0,
		0,257,64,1,0,0,0,258,259,7,13,0,0,259,66,1,0,0,0,260,261,7,14,0,0,261,
		68,1,0,0,0,262,263,7,15,0,0,263,70,1,0,0,0,264,265,7,16,0,0,265,72,1,0,
		0,0,266,267,7,17,0,0,267,74,1,0,0,0,268,269,7,18,0,0,269,76,1,0,0,0,270,
		271,7,19,0,0,271,78,1,0,0,0,272,273,7,20,0,0,273,80,1,0,0,0,274,275,7,
		21,0,0,275,82,1,0,0,0,276,277,7,22,0,0,277,84,1,0,0,0,278,279,7,23,0,0,
		279,86,1,0,0,0,280,281,7,24,0,0,281,88,1,0,0,0,282,283,7,25,0,0,283,90,
		1,0,0,0,284,285,5,46,0,0,285,92,1,0,0,0,286,287,5,44,0,0,287,94,1,0,0,
		0,288,289,5,40,0,0,289,96,1,0,0,0,290,291,5,41,0,0,291,98,1,0,0,0,292,
		293,5,61,0,0,293,100,1,0,0,0,294,298,7,26,0,0,295,297,7,27,0,0,296,295,
		1,0,0,0,297,300,1,0,0,0,298,296,1,0,0,0,298,299,1,0,0,0,299,102,1,0,0,
		0,300,298,1,0,0,0,301,303,7,28,0,0,302,301,1,0,0,0,303,304,1,0,0,0,304,
		302,1,0,0,0,304,305,1,0,0,0,305,104,1,0,0,0,306,314,5,39,0,0,307,313,8,
		29,0,0,308,309,5,39,0,0,309,313,5,39,0,0,310,311,5,92,0,0,311,313,5,39,
		0,0,312,307,1,0,0,0,312,308,1,0,0,0,312,310,1,0,0,0,313,316,1,0,0,0,314,
		312,1,0,0,0,314,315,1,0,0,0,315,317,1,0,0,0,316,314,1,0,0,0,317,318,5,
		39,0,0,318,106,1,0,0,0,319,321,7,30,0,0,320,319,1,0,0,0,321,322,1,0,0,
		0,322,320,1,0,0,0,322,323,1,0,0,0,323,324,1,0,0,0,324,325,6,53,0,0,325,
		108,1,0,0,0,6,0,298,304,312,314,322,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}

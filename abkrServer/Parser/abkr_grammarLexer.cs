//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from abkr_grammarLexer.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public partial class abkr_grammarLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		CREATE=1, DATABASE=2, TABLE=3, INDEX=4, UNIQUE=5, DROP=6, ON=7, INT=8, 
		VARCHAR=9, PRIMARY=10, KEY=11, FOREIGN=12, REFERENCES=13, INSERT=14, INTO=15, 
		VALUES=16, DELETE=17, FROM=18, WHERE=19, SELECT=20, AND=21, ASTERISK=22, 
		GREATER_THAN=23, GREATER_EQUALS=24, LESS_THAN=25, LESS_EQUALS=26, DOT=27, 
		COMMA=28, COLON=29, LPAREN=30, RPAREN=31, EQUALS=32, IDENTIFIER=33, NUMBER=34, 
		STRING=35, WS=36;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"CREATE", "DATABASE", "TABLE", "INDEX", "UNIQUE", "DROP", "ON", "INT", 
		"VARCHAR", "PRIMARY", "KEY", "FOREIGN", "REFERENCES", "INSERT", "INTO", 
		"VALUES", "DELETE", "FROM", "WHERE", "SELECT", "AND", "ASTERISK", "GREATER_THAN", 
		"GREATER_EQUALS", "LESS_THAN", "LESS_EQUALS", "A", "B", "C", "D", "E", 
		"F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", 
		"T", "U", "V", "W", "X", "Y", "Z", "DOT", "COMMA", "COLON", "LPAREN", 
		"RPAREN", "EQUALS", "IDENTIFIER", "NUMBER", "STRING", "WS"
	};


	public abkr_grammarLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public abkr_grammarLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, "'*'", "'>'", 
		"'>='", "'<'", "'<='", "'.'", "','", "':'", "'('", "')'", "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "CREATE", "DATABASE", "TABLE", "INDEX", "UNIQUE", "DROP", "ON", 
		"INT", "VARCHAR", "PRIMARY", "KEY", "FOREIGN", "REFERENCES", "INSERT", 
		"INTO", "VALUES", "DELETE", "FROM", "WHERE", "SELECT", "AND", "ASTERISK", 
		"GREATER_THAN", "GREATER_EQUALS", "LESS_THAN", "LESS_EQUALS", "DOT", "COMMA", 
		"COLON", "LPAREN", "RPAREN", "EQUALS", "IDENTIFIER", "NUMBER", "STRING", 
		"WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "abkr_grammarLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static abkr_grammarLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,36,367,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,1,0,1,0,1,0,1,0,
		1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,
		2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,
		1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,
		9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,
		1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
		1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,
		1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,
		1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,
		1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,24,
		1,24,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,
		1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,
		1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,
		1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,
		1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,
		5,58,338,8,58,10,58,12,58,341,9,58,1,59,4,59,344,8,59,11,59,12,59,345,
		1,60,1,60,1,60,1,60,1,60,1,60,5,60,354,8,60,10,60,12,60,357,9,60,1,60,
		1,60,1,61,4,61,362,8,61,11,61,12,61,363,1,61,1,61,0,0,62,1,1,3,2,5,3,7,
		4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
		17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,0,55,0,57,
		0,59,0,61,0,63,0,65,0,67,0,69,0,71,0,73,0,75,0,77,0,79,0,81,0,83,0,85,
		0,87,0,89,0,91,0,93,0,95,0,97,0,99,0,101,0,103,0,105,27,107,28,109,29,
		111,30,113,31,115,32,117,33,119,34,121,35,123,36,1,0,31,2,0,65,65,97,97,
		2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,69,101,101,2,
		0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,105,
		2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,77,109,109,
		2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,113,
		2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,
		2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,121,
		2,0,90,90,122,122,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,
		57,1,0,39,39,3,0,9,10,13,13,32,32,346,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,
		0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
		1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
		0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
		1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
		0,0,51,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,
		0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,
		0,123,1,0,0,0,1,125,1,0,0,0,3,132,1,0,0,0,5,141,1,0,0,0,7,147,1,0,0,0,
		9,153,1,0,0,0,11,160,1,0,0,0,13,165,1,0,0,0,15,168,1,0,0,0,17,172,1,0,
		0,0,19,180,1,0,0,0,21,188,1,0,0,0,23,192,1,0,0,0,25,200,1,0,0,0,27,211,
		1,0,0,0,29,218,1,0,0,0,31,223,1,0,0,0,33,230,1,0,0,0,35,237,1,0,0,0,37,
		242,1,0,0,0,39,248,1,0,0,0,41,255,1,0,0,0,43,259,1,0,0,0,45,261,1,0,0,
		0,47,263,1,0,0,0,49,266,1,0,0,0,51,268,1,0,0,0,53,271,1,0,0,0,55,273,1,
		0,0,0,57,275,1,0,0,0,59,277,1,0,0,0,61,279,1,0,0,0,63,281,1,0,0,0,65,283,
		1,0,0,0,67,285,1,0,0,0,69,287,1,0,0,0,71,289,1,0,0,0,73,291,1,0,0,0,75,
		293,1,0,0,0,77,295,1,0,0,0,79,297,1,0,0,0,81,299,1,0,0,0,83,301,1,0,0,
		0,85,303,1,0,0,0,87,305,1,0,0,0,89,307,1,0,0,0,91,309,1,0,0,0,93,311,1,
		0,0,0,95,313,1,0,0,0,97,315,1,0,0,0,99,317,1,0,0,0,101,319,1,0,0,0,103,
		321,1,0,0,0,105,323,1,0,0,0,107,325,1,0,0,0,109,327,1,0,0,0,111,329,1,
		0,0,0,113,331,1,0,0,0,115,333,1,0,0,0,117,335,1,0,0,0,119,343,1,0,0,0,
		121,347,1,0,0,0,123,361,1,0,0,0,125,126,3,57,28,0,126,127,3,87,43,0,127,
		128,3,61,30,0,128,129,3,53,26,0,129,130,3,91,45,0,130,131,3,61,30,0,131,
		2,1,0,0,0,132,133,3,59,29,0,133,134,3,53,26,0,134,135,3,91,45,0,135,136,
		3,53,26,0,136,137,3,55,27,0,137,138,3,53,26,0,138,139,3,89,44,0,139,140,
		3,61,30,0,140,4,1,0,0,0,141,142,3,91,45,0,142,143,3,53,26,0,143,144,3,
		55,27,0,144,145,3,75,37,0,145,146,3,61,30,0,146,6,1,0,0,0,147,148,3,69,
		34,0,148,149,3,79,39,0,149,150,3,59,29,0,150,151,3,61,30,0,151,152,3,99,
		49,0,152,8,1,0,0,0,153,154,3,93,46,0,154,155,3,79,39,0,155,156,3,69,34,
		0,156,157,3,85,42,0,157,158,3,93,46,0,158,159,3,61,30,0,159,10,1,0,0,0,
		160,161,3,59,29,0,161,162,3,87,43,0,162,163,3,81,40,0,163,164,3,83,41,
		0,164,12,1,0,0,0,165,166,3,81,40,0,166,167,3,79,39,0,167,14,1,0,0,0,168,
		169,3,69,34,0,169,170,3,79,39,0,170,171,3,91,45,0,171,16,1,0,0,0,172,173,
		3,95,47,0,173,174,3,53,26,0,174,175,3,87,43,0,175,176,3,57,28,0,176,177,
		3,67,33,0,177,178,3,53,26,0,178,179,3,87,43,0,179,18,1,0,0,0,180,181,3,
		83,41,0,181,182,3,87,43,0,182,183,3,69,34,0,183,184,3,77,38,0,184,185,
		3,53,26,0,185,186,3,87,43,0,186,187,3,101,50,0,187,20,1,0,0,0,188,189,
		3,73,36,0,189,190,3,61,30,0,190,191,3,101,50,0,191,22,1,0,0,0,192,193,
		3,63,31,0,193,194,3,81,40,0,194,195,3,87,43,0,195,196,3,61,30,0,196,197,
		3,69,34,0,197,198,3,65,32,0,198,199,3,79,39,0,199,24,1,0,0,0,200,201,3,
		87,43,0,201,202,3,61,30,0,202,203,3,63,31,0,203,204,3,61,30,0,204,205,
		3,87,43,0,205,206,3,61,30,0,206,207,3,79,39,0,207,208,3,57,28,0,208,209,
		3,61,30,0,209,210,3,89,44,0,210,26,1,0,0,0,211,212,3,69,34,0,212,213,3,
		79,39,0,213,214,3,89,44,0,214,215,3,61,30,0,215,216,3,87,43,0,216,217,
		3,91,45,0,217,28,1,0,0,0,218,219,3,69,34,0,219,220,3,79,39,0,220,221,3,
		91,45,0,221,222,3,81,40,0,222,30,1,0,0,0,223,224,3,95,47,0,224,225,3,53,
		26,0,225,226,3,75,37,0,226,227,3,93,46,0,227,228,3,61,30,0,228,229,3,89,
		44,0,229,32,1,0,0,0,230,231,3,59,29,0,231,232,3,61,30,0,232,233,3,75,37,
		0,233,234,3,61,30,0,234,235,3,91,45,0,235,236,3,61,30,0,236,34,1,0,0,0,
		237,238,3,63,31,0,238,239,3,87,43,0,239,240,3,81,40,0,240,241,3,77,38,
		0,241,36,1,0,0,0,242,243,3,97,48,0,243,244,3,67,33,0,244,245,3,61,30,0,
		245,246,3,87,43,0,246,247,3,61,30,0,247,38,1,0,0,0,248,249,3,89,44,0,249,
		250,3,61,30,0,250,251,3,75,37,0,251,252,3,61,30,0,252,253,3,57,28,0,253,
		254,3,91,45,0,254,40,1,0,0,0,255,256,3,53,26,0,256,257,3,79,39,0,257,258,
		3,59,29,0,258,42,1,0,0,0,259,260,5,42,0,0,260,44,1,0,0,0,261,262,5,62,
		0,0,262,46,1,0,0,0,263,264,5,62,0,0,264,265,5,61,0,0,265,48,1,0,0,0,266,
		267,5,60,0,0,267,50,1,0,0,0,268,269,5,60,0,0,269,270,5,61,0,0,270,52,1,
		0,0,0,271,272,7,0,0,0,272,54,1,0,0,0,273,274,7,1,0,0,274,56,1,0,0,0,275,
		276,7,2,0,0,276,58,1,0,0,0,277,278,7,3,0,0,278,60,1,0,0,0,279,280,7,4,
		0,0,280,62,1,0,0,0,281,282,7,5,0,0,282,64,1,0,0,0,283,284,7,6,0,0,284,
		66,1,0,0,0,285,286,7,7,0,0,286,68,1,0,0,0,287,288,7,8,0,0,288,70,1,0,0,
		0,289,290,7,9,0,0,290,72,1,0,0,0,291,292,7,10,0,0,292,74,1,0,0,0,293,294,
		7,11,0,0,294,76,1,0,0,0,295,296,7,12,0,0,296,78,1,0,0,0,297,298,7,13,0,
		0,298,80,1,0,0,0,299,300,7,14,0,0,300,82,1,0,0,0,301,302,7,15,0,0,302,
		84,1,0,0,0,303,304,7,16,0,0,304,86,1,0,0,0,305,306,7,17,0,0,306,88,1,0,
		0,0,307,308,7,18,0,0,308,90,1,0,0,0,309,310,7,19,0,0,310,92,1,0,0,0,311,
		312,7,20,0,0,312,94,1,0,0,0,313,314,7,21,0,0,314,96,1,0,0,0,315,316,7,
		22,0,0,316,98,1,0,0,0,317,318,7,23,0,0,318,100,1,0,0,0,319,320,7,24,0,
		0,320,102,1,0,0,0,321,322,7,25,0,0,322,104,1,0,0,0,323,324,5,46,0,0,324,
		106,1,0,0,0,325,326,5,44,0,0,326,108,1,0,0,0,327,328,5,58,0,0,328,110,
		1,0,0,0,329,330,5,40,0,0,330,112,1,0,0,0,331,332,5,41,0,0,332,114,1,0,
		0,0,333,334,5,61,0,0,334,116,1,0,0,0,335,339,7,26,0,0,336,338,7,27,0,0,
		337,336,1,0,0,0,338,341,1,0,0,0,339,337,1,0,0,0,339,340,1,0,0,0,340,118,
		1,0,0,0,341,339,1,0,0,0,342,344,7,28,0,0,343,342,1,0,0,0,344,345,1,0,0,
		0,345,343,1,0,0,0,345,346,1,0,0,0,346,120,1,0,0,0,347,355,5,39,0,0,348,
		354,8,29,0,0,349,350,5,39,0,0,350,354,5,39,0,0,351,352,5,92,0,0,352,354,
		5,39,0,0,353,348,1,0,0,0,353,349,1,0,0,0,353,351,1,0,0,0,354,357,1,0,0,
		0,355,353,1,0,0,0,355,356,1,0,0,0,356,358,1,0,0,0,357,355,1,0,0,0,358,
		359,5,39,0,0,359,122,1,0,0,0,360,362,7,30,0,0,361,360,1,0,0,0,362,363,
		1,0,0,0,363,361,1,0,0,0,363,364,1,0,0,0,364,365,1,0,0,0,365,366,6,61,0,
		0,366,124,1,0,0,0,6,0,339,345,353,355,363,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}

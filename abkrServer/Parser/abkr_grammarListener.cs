//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from abkr_grammar.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="abkr_grammar"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public interface Iabkr_grammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] abkr_grammar.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] abkr_grammar.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.create_database_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreate_database_statement([NotNull] abkr_grammar.Create_database_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.create_database_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreate_database_statement([NotNull] abkr_grammar.Create_database_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.create_table_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreate_table_statement([NotNull] abkr_grammar.Create_table_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.create_table_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreate_table_statement([NotNull] abkr_grammar.Create_table_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.drop_database_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrop_database_statement([NotNull] abkr_grammar.Drop_database_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.drop_database_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrop_database_statement([NotNull] abkr_grammar.Drop_database_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.drop_table_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrop_table_statement([NotNull] abkr_grammar.Drop_table_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.drop_table_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrop_table_statement([NotNull] abkr_grammar.Drop_table_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.create_index_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreate_index_statement([NotNull] abkr_grammar.Create_index_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.create_index_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreate_index_statement([NotNull] abkr_grammar.Create_index_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.drop_index_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrop_index_statement([NotNull] abkr_grammar.Drop_index_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.drop_index_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrop_index_statement([NotNull] abkr_grammar.Drop_index_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.column_definition_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumn_definition_list([NotNull] abkr_grammar.Column_definition_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.column_definition_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumn_definition_list([NotNull] abkr_grammar.Column_definition_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.column_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumn_definition([NotNull] abkr_grammar.Column_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.column_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumn_definition([NotNull] abkr_grammar.Column_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.column_constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumn_constraint([NotNull] abkr_grammar.Column_constraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.column_constraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumn_constraint([NotNull] abkr_grammar.Column_constraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.data_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_type([NotNull] abkr_grammar.Data_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.data_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_type([NotNull] abkr_grammar.Data_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.identifier_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier_list([NotNull] abkr_grammar.Identifier_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.identifier_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier_list([NotNull] abkr_grammar.Identifier_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] abkr_grammar.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] abkr_grammar.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.insert_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsert_statement([NotNull] abkr_grammar.Insert_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.insert_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsert_statement([NotNull] abkr_grammar.Insert_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.delete_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDelete_statement([NotNull] abkr_grammar.Delete_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.delete_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDelete_statement([NotNull] abkr_grammar.Delete_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue_list([NotNull] abkr_grammar.Value_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue_list([NotNull] abkr_grammar.Value_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] abkr_grammar.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] abkr_grammar.ValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.select_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_statement([NotNull] abkr_grammar.Select_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.select_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_statement([NotNull] abkr_grammar.Select_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.column_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumn_list([NotNull] abkr_grammar.Column_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.column_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumn_list([NotNull] abkr_grammar.Column_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.where_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere_clause([NotNull] abkr_grammar.Where_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.where_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere_clause([NotNull] abkr_grammar.Where_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] abkr_grammar.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] abkr_grammar.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="abkr_grammar.comparison_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison_operator([NotNull] abkr_grammar.Comparison_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="abkr_grammar.comparison_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison_operator([NotNull] abkr_grammar.Comparison_operatorContext context);
}
